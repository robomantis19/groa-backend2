
exports.up = function(knex) {
    return knex.schema.createTable('users', users => { 
        users.increments();
        users.string('username', 128)
        .notNullable()
        .unique();
  
        users.string('password', 128).notNullable();
    })
    .createTable('Favorites', tbl => { 
        tbl.increments()
        tbl.string('image').notNullable()
        tbl.string('title', 256)
        tbl.string('description', 2048)
        tbl.float('starRating')
        tbl.integer('user_id', 128)
        .unsigned()
        .notNullable()
        .references('id')
        .inTable('users')
        .onUpdate('CASCADE')
        .onDelete('RESTRICT')
        
      })
      .createTable('profile', tbl => { 
        tbl.increments()
        tbl.string('Date Joined')
        tbl.string('Username')
        tbl.string('Given Name')
        tbl.string('Family Name')
        tbl.string('Email')
        tbl.string('Address')
        tbl.string('Location')
        tbl.string('Website')
        tbl.string('Bio')
        tbl.string('Pronoun')
        tbl.string('Favorite Films')
        tbl.integer('user_id', 128)
        .unsigned()
        .notNullable()
        .references('id')
        .inTable('users')
        .onUpdate('CASCADE')
        .onDelete('RESTRICT')
      })
      .createTable('comments', tbl => { 
        tbl.increments()
        tbl.string('Date', 256)
        tbl.string('Content', 2048)
        tbl.string('Comment', 2048) 
        tbl.integer('user_id', 128)
        .unsigned()
        .notNullable()
        .references('id')
        .inTable('users')
        .onUpdate('CASCADE')
        .onDelete('RESTRICT')
      })
      .createTable('watched', tbl => { 
        tbl.increments()
        tbl.string('Date')
        tbl.string('Name')
        tbl.string('Year')
        tbl.string('Letterboxd URI')
        tbl.integer('user_id', 128)
        .unsigned()
        .notNullable()
        .references('id')
        .inTable('users')
        .onUpdate('CASCADE')
        .onDelete('RESTRICT')
      })
      .createTable('ratings', tbl => { 
        tbl.increments();
        tbl.string('Date')
        tbl.string('Name')
        tbl.string('Year')
        tbl.string('Letterboxd URI')
        tbl.string('Rating')
        tbl.integer('user_id', 128)
        .unsigned()
        .notNullable()
        .references('id')
        .inTable('users')
        .onUpdate('CASCADE')
        .onDelete('RESTRICT')
      })
      .createTable('diary', tbl => { 
          tbl.increments();
          tbl.string('Date')
          tbl.string('Name')
          tbl.string('Year')
          tbl.string('Letterboxd URI')
          tbl.string('Rating')
          tbl.string('Rewatch')
          tbl.string('Tags')
          tbl.string('Watched Date');
          tbl.integer('user_id', 128)
          .unsigned()
          .notNullable()
          .references('id')
          .inTable('users')
          .onUpdate('CASCADE')
          .onDelete('RESTRICT')
      })
      .createTable('reviews', tbl => { 
          tbl.increments();
          tbl.string('Date')
          tbl.string('Name')
          tbl.string('Year')
          tbl.string('LetterboxdURI')
          tbl.string('Rating')
          tbl.string('Rewatch')
          tbl.string('Review',2048)
          tbl.string('Tags')
          tbl.string('Watched_date')
          tbl.integer('user_id', 128)
          .unsigned()
          .notNullable()
          .references('id')
          .inTable('users')
          .onUpdate('CASCADE')
          .onDelete('RESTRICT')
      })
      .createTable('watchlist', tbl => { 
          tbl.increments();
          tbl.string('Date')
          tbl.string('Name')
          tbl.string('Year')
          tbl.string('Letterboxd URI')
          tbl.integer('user_id', 128)
          .unsigned()
          .notNullable()
          .references('id')
          .inTable('users')
          .onUpdate('CASCADE')
          .onDelete('RESTRICT')
      })
};

exports.down = function(knex) {
    return knex.schema.dropTableIfExists('watchlist')
    .dropTableIfExists('reviews')
    .dropTableIfExists('diary')
    .dropTableIfExists('ratings')
    .dropTableIfExists('watched')
    .dropTableIfExists('comments')
    .dropTableIfExists('profile')
    .dropTableIfExists('Favorites')
    .dropTableIfExists('users')
};
